<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.qin.music.mapper.SonglistMapper" >

  <resultMap id="BaseResultMap" type="me.qin.music.entity.Songlist" >
    <id column="list_id" property="listId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="cover_url" property="coverUrl" jdbcType="VARCHAR" />
    <result column="hide" property="hide" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="SongResultMap" type="me.qin.music.entity.Song" >
    <id column="song_id" property="songId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="album_name" property="albumName" jdbcType="VARCHAR" />
    <result column="albumcover_url" property="albumcoverUrl" jdbcType="VARCHAR" />
    <result column="lyric_url" property="lyricUrl" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    list_id, name, creator, create_time, cover_url, hide
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="me.qin.music.entity.SonglistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from songlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from songlist
    where list_id = #{listId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from songlist
    where list_id = #{listId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="me.qin.music.entity.SonglistExample" >
    delete from songlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.qin.music.entity.Songlist" >
    insert into songlist (list_id, name, creator, 
      create_time, cover_url, hide
      )
    values (#{listId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{coverUrl,jdbcType=VARCHAR}, #{hide,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.qin.music.entity.Songlist" >
    insert into songlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="listId != null" >
        list_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="coverUrl != null" >
        cover_url,
      </if>
      <if test="hide != null" >
        hide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="listId != null" >
        #{listId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="coverUrl != null" >
        #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        #{hide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.qin.music.entity.SonglistExample" resultType="java.lang.Integer" >
    select count(*) from songlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update songlist
    <set >
      <if test="record.listId != null" >
        list_id = #{record.listId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.coverUrl != null" >
        cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.hide != null" >
        hide = #{record.hide,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update songlist
    set list_id = #{record.listId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      hide = #{record.hide,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.qin.music.entity.Songlist" >
    update songlist
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="coverUrl != null" >
        cover_url = #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        hide = #{hide,jdbcType=INTEGER},
      </if>
    </set>
    where list_id = #{listId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.qin.music.entity.Songlist" >
    update songlist
    set name = #{name,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      hide = #{hide,jdbcType=INTEGER}
    where list_id = #{listId,jdbcType=INTEGER}
  </update>


  <!--  List<Song> selectSongInListByListId(Integer listId); -->
  <select id="selectSongInListByListId" resultMap="SongResultMap" resultType="java.lang.Integer">
    SELECT song.*
    FROM song RIGHT JOIN song_to_list AS t ON song.song_id = t.song_id
              LEFT JOIN songlist ON songlist.list_id = t.list_id
    WHERE t.list_id = #{listId}
  </select>

  <!--  int putSongToList(Integer listId,List<Integer> songId);  -->
  <insert id="putSongToList"  >
      INSERT IGNORE INTO song_to_list(list_id,song_id) VALUES
    <if test=" songId != null and songId.size > 0">
      <foreach collection="songId" item="sid" separator=",">
        (#{listId},#{sid})
      </foreach>
    </if>
    <if test=" songId == null or songId.size == 0">
        (-1,-1)
    </if>
  </insert>

  <!--  int delSongForList(@Param("listId") Integer listId, @Param("songId") List<Integer> songId);-->
  <delete id="delSongForList">
    delete from song_to_list
    <where>
      <if test="listId == null or songId == null or songId.size() == 0">
        1 = 0;
      </if>
      <if test="listId != null and songId != null and songId.size() > 0">
        list_id = #{listId} AND song_id IN
        <foreach collection="songId" item="sid" open="(" separator="," close=")">
          #{sid}
        </foreach>
      </if>
    </where>
  </delete>

<!--  void disassociateSongFromList(@Param("listId")  List<Integer> listId);-->
  <delete id="disassociateSongFromList" parameterType="java.util.List">
    delete from song_to_list
    <where>
      <if test="listId == null or listId.size() == 0 ">
        1 = 0;
      </if>
      <if test="listId != null and listId.size() > 0">
        list_id IN
        <foreach collection="listId" item="lid" open="(" separator="," close=")">
          #{lid}
        </foreach>
      </if>
    </where>
  </delete>

<!--  List<Integer> selectSongIdByListId(@Param("listId") Integer listId);-->
  <select id="selectSongIdByListId" resultType="java.lang.Integer">
    SELECT song_id FROM song_to_list WHERE list_id = #{listId}
  </select>

</mapper>